<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>从现在开始</title>
    <atom:link href="http://xiaohu89.com/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://xiaohu89.com/</link>
    <description>used by search engines</description>
    <pubDate>Tue, 21 Jun 2016 22:52:01 +0800</pubDate>
    
      <item>
        <title>一些语法记录</title>
        <link>http://xiaohu89.com/blog/%E8%AF%AD%E6%B3%95%E8%AE%B0%E5%BD%95/</link>
        <guid isPermaLink="true">http://xiaohu89.com/blog/%E8%AF%AD%E6%B3%95%E8%AE%B0%E5%BD%95/</guid>
        <description>&lt;h1&gt;Linux 下用过的语法记录：&lt;/h1&gt;

&lt;p&gt;平常假设Local server的时候，将server stop了之后很多时候并不能将server占用的端口释放掉，这个时候可以用 netstat -ap命令来查看当前系统中的端口号占用情况，进一步需要手动指定关闭指定的端口号的话，可以这样：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;本地创建一个shell脚本文件，shell脚本中可以直接输入想要在命令行中的执行的命令，shell脚本的输入参数可以在脚本中已$+数字的方式指带&lt;/li&gt;
&lt;li&gt;shell中写： netstat -ap | grep $1 | tr -s &amp;#39; &amp;#39;| cut -d &amp;#39; &amp;#39; -f 7 | cut -d / -f 1 | xrags kill -9&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这里面tr -s是将多个空格变为一个空格，cut -d &amp;#39; &amp;#39;的意思是以一个空格为分隔符，将输出的文本分隔开来，-f 7 是提取第一部分的文本，最后将得到占用了指定端口号的Pid，这个pid作为 kill -9 的输入参数，之后就可以关闭这个指定的端口号&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;find 命令: 命令格式  find [pathname] [-options] [value]  可以设置搜索的路径以及搜索的条件，主要搜索的条件有文件的名称，属性，权限，修改时间，大小，挂载区域等，并且find还支持对搜索出来的所有文件统一执行某一条命令，感觉这个比较有用&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Python语法记录：&lt;/h1&gt;

&lt;p&gt;经常看到有函数会定义为：func(/&lt;em&gt;arg,&lt;/em&gt;*kw)的形式，×arg的意思其实是可变的变量，也就是此函数可以接受的变量数目是不定的，有可能1个变量，有可能100个变量这样;××kw的意思是接受输入的参数是字典的形式，×arg，××kw两个搭配起来，就表示这个函数可以接受任何变量的意思，作为一种通配符的作用&lt;/p&gt;

&lt;p&gt;迭代： 定义变量为1的过程，调用变量为N+1时候的方法，最终得到变量为N的结果，写迭代的时候一定用数学归纳法的方法来思考&lt;/p&gt;

&lt;p&gt;map/reduce： map的作用是将单个函数作用于一组对象上面去，map（f，×arg）的形式，返回结果当然也就是一组序列，而reduce的作用是使用输入的函数f依次作用于输入对象上面，其中f一次只能接收2个参数，reduce就类似于一种累加的效果作用于输入对象组&lt;/p&gt;

&lt;p&gt;filter: 这个方法很好理解，过滤器，就是使用输入的函数方法f对于对象组进行过滤，返回值是经过f过滤之后的对象组&lt;/p&gt;

&lt;p&gt;lambda： lambda x ： 2x  就表述一个函数方法输入为x，返回值为2x，这个语法可以快速定义一个函数&lt;/p&gt;

&lt;p&gt;HTML相关：  最简单的HTTP消息，客户端为服务端发请求消息，一般为GET或者POST：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GET消息，包含客户端请求的HTTP版本信息; 访问的域名，也就是HOST; 访问的路径信息&lt;/li&gt;
&lt;li&gt;POST消息，在GET消息的基础之上增加了用户的账户信息，用于登录服务端&lt;/li&gt;
&lt;li&gt;服务端响应消息，包括响应码，200为成功，3XX为重定向，4XX为客户端请求错误，5XX为服务端错误; 响应的内容包含在消息的body内&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 25 Jan 2016 05:18:30 +0800</pubDate>
      </item>
    
      <item>
        <title>高级网管培养计划</title>
        <link>http://xiaohu89.com/blog/%E7%BD%91%E7%AE%A1%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</link>
        <guid isPermaLink="true">http://xiaohu89.com/blog/%E7%BD%91%E7%AE%A1%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</guid>
        <description>&lt;h1&gt;还有2周过年啦，年前没有完成的事情还有点多：&lt;/h1&gt;

&lt;p&gt;几个学习专题，有的未开始自学，有的学了没有总结：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PCC专题，已学习，基本捋清了PCC的各种原理知识，包括SA-Basic，PCRF与PCEF的交互细节，常见套餐的配置方式，需要总结一篇文章进行归纳&lt;/li&gt;
&lt;li&gt;IP专题，未学习，当前可供学习的材料的话也就是基础的数通原理，基本原理已经学习多次，不必再看，还是以实验室小机房为管道，学习核心网网元的各类IP路由规划和实现方式&lt;/li&gt;
&lt;li&gt;QOS专题，这部分其实和PCC有叠加，PCC是实现QOS控制的重要手段之一，这方面材料可以从huihui哥写的总结开始着手&lt;/li&gt;
&lt;li&gt;NFV专题，学习了一半，总结了一篇NFV基础知识的文章出来，现在已经能够掌握NFV的各种名词术语和基本含义，对于上层APP网元和MANO，继续学习材料，输出总结出来&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;过完年已经过了一个月了啦，年前规划的几个专题有有所学习：&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;PCC专题，针对网设方面的知识系统的学习了一遍，对于简化SA的理解也比以前深入了一些，但是还是需要输出一篇文章出来&lt;/li&gt;
&lt;li&gt;IP专题，小小的归纳总结了一些东西，但是其实还是没有真正掌握，现在连实验室那一堆维护网络都还没有理清除，后面需要重点抓这个&lt;/li&gt;
&lt;li&gt;QOS专题，huihui哥总结学了一遍，基本对于数通网络中的QOS控制有了初步的理解&lt;/li&gt;
&lt;li&gt;NFV专题，现在在知识上面算是基本入门了吧，各种概念现在还是比较清楚了，但是现在最大的问题还是没有实际上手，实验室环境仍然没有弄好，下周周末前一定要把vUSN/vUGW拉起来&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;年初规划的那几个专题，或多或少都输出了总结和文章了，现在是时候规划一下下一轮的学习专题了：&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;NFV专题，前面三月份的时候好好搞了下实验室的那套环境，装起来了一套vUSN，vUGW因为磁阵问题还装不上去，现在其实实验室能做的事情很多了，远程可以登录，只是现在到每套网元/交换机的维护网络还没有串联起来，关于NFV的原理知识已经学习了两遍了，现在重要的地方在与网络设计和具体的EPC业务配置需要搞清楚，至少看到和以前的传统平台的差异的地方，这部分内容作为重点工作，在月底回上海之后搞起来&lt;/li&gt;
&lt;li&gt;工具专题，现在我貌似要负责EPC所有的配套工具的接口工作了，所以后续工具的导入，及时更新，工具功能缺失的工作都需要我来做了;现在看到的就是FMA工具质量的保证，FMA会随着PSS8.0在7月份TR5,可服务性全景图的刷新;到7月底这两项工作输出初步成果出来&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 24 Jan 2016 00:00:00 +0800</pubDate>
      </item>
    
      <item>
        <title>2016学习规划</title>
        <link>http://xiaohu89.com/blog/2016%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/</link>
        <guid isPermaLink="true">http://xiaohu89.com/blog/2016%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/</guid>
        <description>&lt;p&gt;回顾去年11月份的一些学习规划&lt;/p&gt;

&lt;p&gt;去年11月的时候安排一下2个月的学习计划，现在看来，完成的还不错&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;上课，已完成Justice那门课程，上课的过程还是算比较轻松，虽然每次让我课前用英文写一堆讨论观点的时候还是比较痛苦，但是课程作业不多，并且这门课其实是需要课外去阅读相关哲学的著作的（显然我是没去阅读的。。），完成这门课也就花了3周时间的样子&lt;/li&gt;
&lt;li&gt;改变娱乐方式，已完成，心爱的Dota2已卸载，反复思考后，我发现我现在虽然仍然有冲上5000分打质量局的实力和决心，但是真的是没有这个时间了，考虑现在胜率在57%左右，从现在冲800分需要8000/（10×（57%-43%）×25）=228盘，每天坚持2局也需要110天才能冲上去，所以其实时间也是一种实力，哈哈。&lt;/li&gt;
&lt;li&gt;阅读，部分完成，想读一读欧洲近代史，Kindle上面买了本1840-1870年的欧洲近代史，看了我才知道原来中立描述的历史书真是有点无聊。。感觉是一本工具书，一本编年史，列出各种数字，给出事件的发生时刻/地点/人物/背景，剩下的就靠读者你自己去消化了，当前进度缓慢，看了不到15%，后面可以考虑跳着看，看想要了解的部分，例如宗教史可以粗略的浏览。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;记今年1月份的一些学习规划&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;上课：当前在EDX和Coursera上面看到的计算机相关课程都并不深入，感觉学习起来效率并不高，所以现在还是倾向于在上面报非技术类别的课程，当前报了一门美国南北战争史，主要看课程的介绍视频拍的很专业也用心，而且老师的嗓音听起来很舒服的样子，此课1月30号开始;我之前也去找过之前上过的History of Global Architectures，然而这门课并没有出第二季。这个是EDX上面的课程，另外找了python3的一个教程在学，接触了好多没有接触过的知识，但是学习这个最大的问题就是写的太少了，没有机会去写，两天不写的话就又生疏了&lt;/li&gt;
&lt;li&gt;改变娱乐方式：其实上次卸载完了Dota2之后，我迅速把精力放到了单机上面去，先玩通了侠客风云传，后面又是打完了虫群之心和虚空之遗的战役，直接导致现在竟然开始看上了星际老男孩，不过那几个谐星还真是搞笑;现在问题主要是&lt;b&gt;看直播时间有点多！&lt;/b&gt;常常回家有事没事点开直播，然后一小时，甚至两小时就过去了T_T，这不是一个好的习惯;补漫补番，这其实是接上一条，现在主要需要补的漫有：浪客行，进击的巨人。动画：火影这种已经完结了的如果动画也出到完结了我就去把它补了&lt;/li&gt;
&lt;li&gt;阅读：《欧洲近代史》进入想了解的章节（政治，军事，经济等），《三体》，现在把三体第一部已经看完了，名不虚传，逻辑和剧情都经得起推敲。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;记今年2月3月4月份的一些学习内容&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;上课：1月中旬的时候在edx上面报了一个American CivilWar and reconstruction的课，到3月中旬用了两个月把这门课搞定了，还算是轻松，每周大概花5-6个小时的样子就ok了，在上这个课之前我对于那段历史基本没什么认知，停留在知道有解放黑奴宣言，知道林肯，格兰特，李这几号人物而已，上了这门课才知道做历史研究也是博大精深，课程上面给你各种历史上面的史料来辅助学习，这肯定也和这段历史相对较近而且美国学者挖得细致有关系，反正我学完了之后对于CivilWar的几个阶段发生了什么，有哪些重要事件，政治上和军事上面的关键措施基本上都知道了，其实像这种课真正要认真去学习是非常花精力的，像这个课要深入就得去读教授写的书，我拿头去读啊。。上这个课最有意思的一幕就是在我看完魔戒第二部的时候来上课，教授在最后一课时说道：“今天让我用一部小说中的情节来结束我们这门课程，《The Lord of The Ring》。。when forodo came back to shire， everything was changed”，上完这门课之后接着又报了这门课的续集，The Reconstruction，现在正在学习第一周的课&lt;/li&gt;
&lt;li&gt;娱乐方式： 最近周末都没怎么出门，都在屋子里看片子，主要娱乐方式就是看片了，偶尔手痒了登一下Dota2，最近倒是把前面攒着的海贼给看完了，后面我还是想找机会运动一下了，现在体重已经到63KG了，而且我发现我最近的胃口明显变好了，非常能吃，是时候运动起来了，想去旁边的健身房看看可以游泳不，然后就是在屋子里做Keep里面的锻炼&lt;/li&gt;
&lt;li&gt;学习： 前面本来是想借私下做游戏来学习，现在游戏暂时还没时间和机会去做，抓了一本深入理解计算机系统来学，现在学习情况还可以，每天花1个小时左右在看书，如果当初刚上大学的时候就能学到这些，那还何愁走到今天这幅田地啊&lt;/li&gt;
&lt;li&gt;阅读： 数月前的《欧洲近代史》，我发现看起来好吃力啊，真的是纯学术，编年体并且没有任何主观倾向的描述，我觉得这更像是一本查阅用的手册来配合专业人员搞历史研究的，而不是一本适合我这种人来学习近代欧洲史的书,总之还是把前面想看的军事，政治方面的章节看完吧; 最近屡屡看到倚天屠龙记里面的原著文字，我发现写得真是有点意思啊，有些想去看看原著小说了，去搞一份到kindle上来吧&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;记今年5月6月份的一些学习内容&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;上课：1月份报的Civilwar and reconstruction上完了，这只是Civilwar三部曲的第二部，然后我也把最后一门Reconstruction给上完了，上课的时候就明显感觉到第三门比前面的那门要难了，那段历史的背景很复杂，比如就拿一个cunning school来说，我就上了好几节课才搞清楚这个学派究竟是在声张什么观点，其实到最后我还差了3-4周的课程是没有完成的，这部分感觉是最重要的部分，阐述重建如何走向终结，如何给后面的社会留下了一个巨大的问题，后面两周的课程找时间去完成，顺便去物色下一门新的课程&lt;/li&gt;
&lt;li&gt;娱乐方式： 前几个月看片子看得不少，最近遇上片荒了，结果就是&lt;b&gt;。。大量的看直播！&lt;/b&gt;，Dota对黑看起来根本就是没完没了的呀，尤其是有Dota2比赛的时候，一看就是一天！;另外前面两个月开始偶尔玩了一下GTA5,名不虚传，这种游戏究竟是怎么做出来的，要画面有画面，要游戏性有游戏性;关于娱乐时间的分配，前面其实已经想过了，当时想的是趁机会好好钻研一下ios上面的优秀游戏，当时也确实搞了2个游戏来玩，那个养猫的游戏我前前后后还很玩了几个星期，但是没有保持下去，那2个游戏觉得没意思了之后没有去找其他的游戏; &lt;/li&gt;
&lt;li&gt;学习： 记得年初的时候找了一个Python3的教程在那里学习，从零开始用Python写出一个web的引擎出来，当时没坚持下来。后来受推荐在学习一本写计算机的书，还算有些兴趣，现在已经读了一半了，后面这本书上面还有2,3个值得学习的章节还要继续读下去; 前面一直在叫嚣要搞游戏的事情终于搞起来了，初步计划是先搞一个像模像样的手机版武林群侠传出来，当前看来工作量有些大，我前面还只是简单做了一些表格数据的工作，后面开始简单写写小功能模块和UI&lt;/li&gt;
&lt;li&gt;阅读： 前面两个月都在杭州这边出差，基本没有任何阅读。。好在最近一周梳理一下，后面想把三体第三部读了，每天的日常新闻阅读这个问题，也有解决办法了，既然RSS阅读器已经死了，而我的阅读源也不多，每天打开那几个来源的网站也可以满足我每天的日常阅读的&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 12 Jan 2016 00:00:00 +0800</pubDate>
      </item>
    
      <item>
        <title>Github Pages DNS设置</title>
        <link>http://xiaohu89.com/blog/Github-Pages-DNS-%E8%AE%BE%E7%BD%AE/</link>
        <guid isPermaLink="true">http://xiaohu89.com/blog/Github-Pages-DNS-%E8%AE%BE%E7%BD%AE/</guid>
        <description>&lt;p&gt;经过一系列的研究之后，我好像终于把用Github Page托管静态网页的DNS配置好了。&lt;/p&gt;

&lt;p&gt;其实设置很简单呐，只是刚开始的时候我看网上的教程很盲目，得到的信息太混乱了，我现在也就是在3个地方对域名的解析有相关的设置，Godaddy，DNSPOD以及Github上面的CNAME：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;买一个公网的域名，比如在Godaddy上买一个，一年50块的样子，然后去DNSPOD（一个国内提供DNS服务的提供商）注册一个账户，进DNSPOD账户里面可以看到两个本地的NS记录域名&lt;/li&gt;
&lt;li&gt;进Godaddy的账户里，把系统默认的NS记录修改为刚刚从DNSPOD得到的那两个NS域名&lt;/li&gt;
&lt;li&gt;在本地尝试dig username.github.io，可以多dig几次，得到好几个ip地址解析结果&lt;/li&gt;
&lt;li&gt;进入DNSPOD的设置页面，建两条A记录，把自己买的域名解析到上一步得到的那几个ip地址上&lt;/li&gt;
&lt;li&gt;进入Github上面静态网页的库里面，在根目录下面创建一个CNAME文件，里面输入买的域名（不带http://和WWW）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/img/DNSPOD-Set.png&quot; alt=&quot;DNSPOD&quot;&gt;&lt;/p&gt;

&lt;p&gt;然后就搞定了。&lt;/p&gt;

&lt;p&gt;具体解析流程应该是 先查询Godaddy的DNS服务器，查询不到然后NS记录查DNSPOD的DNS，DNSPOD反馈Github的ip地址回来，然后尝试使用买到的域名来访问页面，Github服务器得到你的自定义域名后，把页面指向你的静态网页地址，最后一步不知道是怎么实现的，后面再去找机会研究一下。&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Dec 2015 22:38:30 +0800</pubDate>
      </item>
    
      <item>
        <title>Jekyll 安装</title>
        <link>http://xiaohu89.com/blog/jekyll-%E5%AE%89%E8%A3%85/</link>
        <guid isPermaLink="true">http://xiaohu89.com/blog/jekyll-%E5%AE%89%E8%A3%85/</guid>
        <description>&lt;h1&gt;安装jekyll&lt;/h1&gt;

&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;发现Pelican的设置太不灵活了，比如我想自定义index页面,但是在执行make html之后，直接生成了一个默认的index，于是准备尝试一下jekyll试试。
其实jekyll应该就算是Pelican的加强版吧，你看两者的文本编辑语法都是一样基于Markdown的，只是现在大多数人都是用jekyll的了。
先去zhihu上面搜索了下jekyll的指南，找到了一个中文版的jekyll文档，看起来很不错呀,文档链接:jekyll.bootcss.com
咱不管用不用，先把它装上再说吧,我果断用apt-get install jekyll下载了一个jekyll
一运行，马上报错：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Ruby200/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubygems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;core_ext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel_require&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;require&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cannot&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;such&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yajl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yajl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LoadError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
    

&lt;p&gt;看起来像是ruby的问题，马上用apt-get purge命令把jekyll给卸载了，去jekyll文档里面看到别人安装是用的gem install命令，这个gem看起来是ruby环境里面的安装命令;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
    

&lt;p&gt;把ruby的环境装好了&lt;/p&gt;

&lt;p&gt;ruby-v可以看到：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;root@xiaohu-Z7:/home/xiaohu/projects/myblog/github/content/article# ruby -v
ruby 2.1.2p95 (2014-05-08) [x86_64-linux-gnu]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再执行gem install jekyll，报错：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ERROR: Could not find a valid gem &amp;#39;jekyll&amp;#39; (&amp;gt;= 0), here is why:
Unable to download data from https://rubygems.org/ - Errno::ETIMEDOUT: Operation timed out - connect(2) (https://rubygems.org/latest_specs.4.8.gz)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;看起来像是链接镜像服务器失败的样子&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;gem sources -r http://rubygems.org/
gem sources -a http://ruby.taobao.org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;把ruby资料的源换成了taobao的镜像，这次安装jekyll成功&lt;/p&gt;

&lt;p&gt;尝试运行jekyll new xxx，报错提示/usr/bin下面找不到jekyll程序，这个挺简单：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;which jekyll
export PATH=$PATH:/usr/local/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;先找到了jekyll程序所在的目录，然后增加了一个环境变量;&lt;/p&gt;

&lt;p&gt;最后成功安装上了jekyll：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;jekyll new xiaohu-site
root@xiaohu-Z7:/home/xiaohu/blog/xiaohu-site# ls
about.md  _config.yml  css  feed.xml  _includes  index.html  _layouts  _posts  _sass  _site
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/img/jekyll.jpg&quot; alt=&quot;Jekyll Logo&quot;&gt;&lt;/p&gt;

&lt;p&gt;PS: 写文章的时候，可以用鼠标选中外部窗口的内容，然后回到vim中，按shift+insert（就是锁屏的那个快捷键）,就可以把外部的内容拷贝到vim里面了。&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Dec 2015 01:25:30 +0800</pubDate>
      </item>
    
      <item>
        <title>Git学习</title>
        <link>http://xiaohu89.com/blog/Git-%E5%AD%A6%E4%B9%A0/</link>
        <guid isPermaLink="true">http://xiaohu89.com/blog/Git-%E5%AD%A6%E4%B9%A0/</guid>
        <description>&lt;h1&gt;Git Pro&lt;/h1&gt;

&lt;p&gt;这个小网页又被我挖出来玩了，哈哈，之前一直同步失败是为什么呢？原来根本不懂Git的原理呀。
今天简单补了下原理，之前我是根本就没有把我的本地页面内容同步到远端服务器上面去，所以才一直看不到我页面的更新。
Git以我现在的理解就是一个分布式的版本控制系统，我现在所使用的Github也就是一个使用了Git技术的门户，我在Github的免费空间里创建了一个我网站的远程仓库，然后我在我本地的计算机上面也有一个本地的仓库，我实际修改的文件都是从本地或者远程仓库里面提取出来的文件，所以我现在同步网站，实际上经过了两步，首先需要通过Git commit命令将刷新生成的网站文件同步到本地仓库，然后再使用Git Push命令将本地的版本上传到Github上面的版本，最后Github上面生成的静态网页才会显示出我更新后的效果;&lt;/p&gt;

&lt;h2&gt;Git的一些常用命令&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;git init #此命令会在当前目录下初始化生成一个Git仓库，也就是本地仓库,默认会创建一个叫master的本地分支&lt;/li&gt;
&lt;li&gt;git status #此命令可以查看当前本地分支的状态，比如显示当前的目录下哪些文件有了改变，哪些文件已经被加入到了推送队列中&lt;/li&gt;
&lt;li&gt;git add #此命令把当前分支中的文件加入到推送队列中，可以用-A指令添加所有文件&lt;/li&gt;
&lt;li&gt;git remote add/remove/show #添加删除显示当前远程分支的状态&lt;/li&gt;
&lt;li&gt;git push -u remote local #将本地的分支推送至远端的分支上去&lt;/li&gt;
&lt;li&gt;git push -force #强制推送，比如两边分支中文件数目都不一致，就需要强制推送才能成功&lt;/li&gt;
&lt;li&gt;git pull #此命令是将远程的仓库与本地的工作空间进行合并，但是是怎么来实现合并的，有冲突怎么办？&lt;/li&gt;
&lt;li&gt;git diff [local Branch] [remote repository/remote Branch] #此命令将本地的分支与远程仓库的分支进行比较，显示所有文件的改动&lt;/li&gt;
&lt;li&gt;git commit #在使用git add将文件添加到推送队列之后，还需要使用git commit命令将文件进行提交本地的工作空间，提交之后才能push至远程仓库完成更新&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更加详细的命令和相关原理可一参考大作，&lt;a href=&quot;%22http://git.oschina.net/progit%22&quot;&gt;Pro Git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/git.jpg&quot; alt=&quot;Git Logo&quot;&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Dec 2015 21:29:33 +0800</pubDate>
      </item>
    
      <item>
        <title>Hello</title>
        <link>http://xiaohu89.com/blog/hello/</link>
        <guid isPermaLink="true">http://xiaohu89.com/blog/hello/</guid>
        <description>&lt;p&gt;Github 开张大吉
折腾了好几天，总算是把这个blog搭建起来了&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/python.png&quot; alt=&quot;Python&quot;&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jul 2015 22:30:30 +0800</pubDate>
      </item>
    
      <item>
        <title>Pelican 学习</title>
        <link>http://xiaohu89.com/blog/Pelican-%E5%AD%A6%E4%B9%A0/</link>
        <guid isPermaLink="true">http://xiaohu89.com/blog/Pelican-%E5%AD%A6%E4%B9%A0/</guid>
        <description>&lt;h1&gt;  Pelican学习笔记&lt;/h1&gt;

&lt;p&gt;上上周开始想要搭一个自己的网站出来玩玩，之前接触到了Github,发现很多人利用Github pages来搭建了自己的blog，我就在知乎上找到了一篇教程，其实搭建挺简单的。主要上周买了新电脑，装系统，搭软件环境弄得很烦&lt;/p&gt;

&lt;p&gt;搭站的话，其实我现在做的是最最简单的步骤，就是在本地利用工具，我现在用的是Pelican这个组件，自动生成了一个网页所需要的各个资源文件，然后在本地生成静态的Html页面，然后通过Git将本地的Html页面推送到Github上面，和Github page绑定，最后在网上找一个代理把你申请的domain和你的Github page域名互相绑定,i然后你发现你输入你申请的域名，就可以访问你私人的部落格了。&lt;/p&gt;

&lt;p&gt;在编辑页面的时候，其实使用的就是Markdown的语法了，所以生成的页面文件后缀名也叫.md，所以有啥不清楚直接去看markdown的语法说明咯. ubuntu下面的alias设置可以去/etc目录下编辑bash.bashrc文件，添加永久的alias映射，比如今天我就添加了一个杀死pelican进程的快捷命令.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;alias killpelican=&amp;quot;ps -elf | grep pelican | cut -c 15-20 | xargs kill -9&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;cut -c的意思是将前面的输入截取第15个至第20个字符，也就是进程的pid，xargs的意思是将前面的输出作为kill -9的输入参数。&lt;/p&gt;

&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;自从上上周网站雏形搭出来以后，很是懈怠，好多功能都没有实现，接着弄啊，怎么实现评论，怎么实时更新页面，怎么样添加插件等等。&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Jul 2015 20:24:30 +0800</pubDate>
      </item>
    
  </channel>
</rss>
